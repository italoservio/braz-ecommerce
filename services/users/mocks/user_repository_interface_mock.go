// Code generated by MockGen. DO NOT EDIT.
// Source: services/users/infra/storage/user_repository.go
//
// Generated by this command:
//
//	mockgen -source=services/users/infra/storage/user_repository.go -destination=services/users/mocks/user_repository_interface_mock.go -package=mocks -write_generate_directive
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	domain "github.com/italoservio/braz_ecommerce/services/users/domain"
	gomock "go.uber.org/mock/gomock"
)

//go:generate mockgen -source=services/users/infra/storage/user_repository.go -destination=services/users/mocks/user_repository_interface_mock.go -package=mocks -write_generate_directive

// MockUserRepositoryInterface is a mock of UserRepositoryInterface interface.
type MockUserRepositoryInterface struct {
	ctrl     *gomock.Controller
	recorder *MockUserRepositoryInterfaceMockRecorder
}

// MockUserRepositoryInterfaceMockRecorder is the mock recorder for MockUserRepositoryInterface.
type MockUserRepositoryInterfaceMockRecorder struct {
	mock *MockUserRepositoryInterface
}

// NewMockUserRepositoryInterface creates a new mock instance.
func NewMockUserRepositoryInterface(ctrl *gomock.Controller) *MockUserRepositoryInterface {
	mock := &MockUserRepositoryInterface{ctrl: ctrl}
	mock.recorder = &MockUserRepositoryInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUserRepositoryInterface) EXPECT() *MockUserRepositoryInterfaceMockRecorder {
	return m.recorder
}

// GetByEmail mocks base method.
func (m *MockUserRepositoryInterface) GetByEmail(ctx context.Context, collection, email string, structure *domain.UserDatabaseNoPassword) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByEmail", ctx, collection, email, structure)
	ret0, _ := ret[0].(error)
	return ret0
}

// GetByEmail indicates an expected call of GetByEmail.
func (mr *MockUserRepositoryInterfaceMockRecorder) GetByEmail(ctx, collection, email, structure any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByEmail", reflect.TypeOf((*MockUserRepositoryInterface)(nil).GetByEmail), ctx, collection, email, structure)
}
